@model IEnumerable<Workshop.Models.GuestBook>
@using PagedList;
@using PagedList.Mvc;

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Subject)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Body)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateCreated)
        </th>
        <th></th>
    </tr>
    @if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Subject)
                </td>
                <td>
                    @Html.Raw(item.Body)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateCreated)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-default" })
                    @Html.ActionLink("Details", "Index", new { id = item.Id }, new { @class = "btn btn-default" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="6">No data.</td>
        </tr>
    }

</table>

@Html.PagedListPager(
        (IPagedList)Model,
        page => Url.Action("Index", new { page }),
        PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
        {
            HttpMethod = "GET",
            UpdateTargetId = "threadView",
        }))

